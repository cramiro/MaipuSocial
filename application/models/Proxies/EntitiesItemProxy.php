<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesItemProxy extends \Entities\Item implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getNetwork()
    {
        $this->__load();
        return parent::getNetwork();
    }

    public function setNetwork($network)
    {
        $this->__load();
        return parent::setNetwork($network);
    }

    public function getSearch()
    {
        $this->__load();
        return parent::getSearch();
    }

    public function setSearch($search)
    {
        $this->__load();
        return parent::setSearch($search);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDomain()
    {
        $this->__load();
        return parent::getDomain();
    }

    public function setDomain($domain)
    {
        $this->__load();
        return parent::setDomain($domain);
    }

    public function getEmbed()
    {
        $this->__load();
        return parent::getEmbed();
    }

    public function setEmbed($embed)
    {
        $this->__load();
        return parent::setEmbed($embed);
    }

    public function getFavicon()
    {
        $this->__load();
        return parent::getFavicon();
    }

    public function setFavicon($favicon)
    {
        $this->__load();
        return parent::setFavicon($favicon);
    }

    public function getGeo()
    {
        $this->__load();
        return parent::getGeo();
    }

    public function setGeo($geo)
    {
        $this->__load();
        return parent::setGeo($geo);
    }

    public function getImage()
    {
        $this->__load();
        return parent::getImage();
    }

    public function setImage($image)
    {
        $this->__load();
        return parent::setImage($image);
    }

    public function getLanguage()
    {
        $this->__load();
        return parent::getLanguage();
    }

    public function setLanguage($language)
    {
        $this->__load();
        return parent::setLanguage($language);
    }

    public function getLink()
    {
        $this->__load();
        return parent::getLink();
    }

    public function setLink($link)
    {
        $this->__load();
        return parent::setLink($link);
    }

    public function getTimestamp()
    {
        $this->__load();
        return parent::getTimestamp();
    }

    public function setTimestamp($timestamp)
    {
        $this->__load();
        return parent::setTimestamp($timestamp);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setUser($user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUserId()
    {
        $this->__load();
        return parent::getUserId();
    }

    public function setUserId($user_id)
    {
        $this->__load();
        return parent::setUserId($user_id);
    }

    public function getUserImage()
    {
        $this->__load();
        return parent::getUserImage();
    }

    public function setUserImage($user_image)
    {
        $this->__load();
        return parent::setUserImage($user_image);
    }

    public function getUserLink()
    {
        $this->__load();
        return parent::getUserLink();
    }

    public function setUserLink($user_link)
    {
        $this->__load();
        return parent::setUserLink($user_link);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'description', 'domain', 'embed', 'favicon', 'geo', 'image', 'language', 'link', 'timestamp', 'title', 'type', 'user', 'user_id', 'user_image', 'user_link', 'network', 'search');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}